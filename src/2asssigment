
class University {
    private String name;
    private String location;

    // Constructor
    public University(String name, String location) {
        this.name = name;
        this.location = location;
    }


    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    // Overriding toString() for meaningful output
    @Override
    public String toString() {
        return "University{name='" + name + "', location='" + location + "'}";
    }

    // Overriding equals() for comparing universities
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        University that = (University) obj;
        return name.equals(that.name) && location.equals(that.location);
    }

    // Overriding hashCode() to ensure consistent hashing
    @Override
    public int hashCode() {
        return name.hashCode() + location.hashCode();
    }
}

// Professor class extending University to demonstrate inheritance
class Professor extends University {
    private String professorName;
    private String department;

    // Constructor
    public Professor(String name, String location, String professorName, String department) {
        super(name, location);
        this.professorName = professorName;
        this.department = department;
    }

    // Getters and setters
    public String getProfessorName() {
        return professorName;
    }

    public void setProfessorName(String professorName) {
        this.professorName = professorName;
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }

    @Override
    public String toString() {
        return "Professor{" +
                "name='" + professorName + '\'' +
                ", department='" + department + '\'' +
                ", university=" + super.toString() +
                '}';
    }
}

// Course class demonstrating encapsulation and polymorphism
class Course {
    private String courseName;
    private String courseCode;
    private Professor professor;

    // Constructor
    public Course(String courseName, String courseCode, Professor professor) {
        this.courseName = courseName;
        this.courseCode = courseCode;
        this.professor = professor;
    }

    // Getters and setters
    public String getCourseName() {
        return courseName;
    }

    public void setCourseName(String courseName) {
        this.courseName = courseName;
    }

    public String getCourseCode() {
        return courseCode;
    }

    public void setCourseCode(String courseCode) {
        this.courseCode = courseCode;
    }

    public Professor getProfessor() {
        return professor;
    }

    public void setProfessor(Professor professor) {
        this.professor = professor;
    }

    // Overriding toString()
    @Override
    public String toString() {
        return "Course{" +
                "courseName='" + courseName + '\'' +
                ", courseCode='" + courseCode + '\'' +
                ", professor=" + professor.toString() +
                '}';
    }
}

// Main class to demonstrate the system
public class UniversityManagementSystem {
    public static void main(String[] args) {
        // Creating a university
        University uni = new University("Astana IT University", "Astana");

        // Creating a professor
        Professor prof = new Professor(uni.getName(), uni.getLocation(), "Dr. Bekbolat", "Computer Science");

        // Creating a course
        Course course = new Course("Java Programming", "CS101", prof);

        // Displaying details
        System.out.println(course);

        // Checking equality of two universities
        University anotherUni = new University("Astana IT University", "Astana");
        System.out.println("Are the two universities equal? " + uni.equals(anotherUni));

        // Hash code demonstration
        System.out.println("HashCode of University: " + uni.hashCode());
    }
}
